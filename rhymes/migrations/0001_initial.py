# Generated by Django 4.2.4 on 2023-08-28 05:34

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="NGram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=500, unique=True)),
                ("n", models.PositiveIntegerField(db_index=True)),
                ("ipa", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "phones",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.FloatField(), size=None
                        ),
                        blank=True,
                        db_index=True,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "stresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(),
                        blank=True,
                        db_index=True,
                        null=True,
                        size=None,
                    ),
                ),
                ("mscore", models.FloatField(blank=True, db_index=True, null=True)),
                (
                    "count",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                (
                    "song_count",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("pct", models.FloatField(blank=True, db_index=True, null=True)),
                ("adj_pct", models.FloatField(blank=True, db_index=True, null=True)),
                ("song_pct", models.FloatField(blank=True, db_index=True, null=True)),
                ("title_pct", models.FloatField(blank=True, db_index=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "NGram",
                "verbose_name_plural": "NGrams",
            },
        ),
        migrations.CreateModel(
            name="Rhyme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("song_uid", models.SlugField(blank=True, null=True)),
                ("level", models.PositiveIntegerField(db_index=True, default=1)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "from_ngram",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rhymed_from",
                        to="rhymes.ngram",
                    ),
                ),
                (
                    "to_ngram",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rhymed_to",
                        to="rhymes.ngram",
                    ),
                ),
            ],
            options={
                "unique_together": {("from_ngram", "to_ngram", "song_uid")},
            },
        ),
        migrations.AddField(
            model_name="ngram",
            name="rhymes",
            field=models.ManyToManyField(through="rhymes.Rhyme", to="rhymes.ngram"),
        ),
        migrations.CreateModel(
            name="Cache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=500)),
                ("version", models.PositiveIntegerField(default=1)),
                ("data", models.JSONField(blank=True, null=True)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="data/cache"),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "unique_together": {("key", "version")},
            },
        ),
        migrations.CreateModel(
            name="SongNGram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("song_uid", models.SlugField()),
                ("count", models.PositiveIntegerField(db_index=True)),
                (
                    "ngram",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="song_ngrams",
                        to="rhymes.ngram",
                    ),
                ),
            ],
            options={
                "unique_together": {("ngram", "song_uid")},
            },
        ),
    ]
